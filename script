getgenv().AutoArea = false
getgenv().InfiniteGym = true
getgenv().AutoUpgrade = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InstancingCmds = require(ReplicatedStorage.Library.Client.InstancingCmds)

local function Enter(Name)
    setthreadidentity(2)
    pcall(function()
        InstancingCmds.Enter(Name)
    end)
    setthreadidentity(7)
end

Enter("GymEvent")

local rebCooldown = 2
local areaCooldown = 5
local gymCooldown = 1
local upgCooldown = 1



local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")

local InfTrain = Network:WaitForChild("InfiniteGym_Train")
local Train = Network:WaitForChild("Gym_Train")

task.spawn(function()
    while true do
        pcall(function()
            InfTrain:InvokeServer("Squat")
        end)
        task.wait()
    end
end)

task.spawn(function()
    while true do
        pcall(function()
            Train:InvokeServer("Squat")
        end)
        task.wait()
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoUpgrade == true then
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("BetterGymEgg")
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("MoreCriticalChance")
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("MoreEndurance")
        end
        wait(upgCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().InfiniteGym == true then
            game:GetService("ReplicatedStorage").Network.InfiniteGym_Start:InvokeServer()
        end
        wait(gymCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoArea == true then
            game:GetService("ReplicatedStorage").Network.Gym_Rebirth:InvokeServer()
        end
        wait(rebCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoArea == true then
            for i = 2, 5 do
                game:GetService("ReplicatedStorage").Network.InstanceZones_RequestPurchase:InvokeServer("GymEvent", i)
                wait(0.5)
            end
        end
        wait(areaCooldown)
    end
end)

task.spawn(function()
    while true do
        local inv = nil
        for _, v in pairs(getgc(true)) do
            if type(v) == "table" and rawget(v, "Inventory") and type(v.Inventory) == "table" then
                inv = v.Inventory
                break
            end
        end

        local hugeSharkCount = 0
        local titanicPiggyCount = 0

        if inv and inv.Pet then
            for _, data in pairs(inv.Pet) do
                if typeof(data) == "table" then
                    if tostring(data.id) == "Huge Gym Shark" then
                        hugeSharkCount += 1
                    elseif tostring(data.id) == "Titanic Gym Piggy" then
                        titanicPiggyCount += 1
                    end
                end
            end
        end

        getgenv().HugeGymSharkCount = hugeSharkCount
        getgenv().TitanicGymPiggyCount = titanicPiggyCount

        wait(5)
    end
end)

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Blende Chat und Playerlist oben aus
local starterGui = game:GetService("StarterGui")
starterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
starterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)

local gui = Instance.new("ScreenGui")
gui.Name = "FullscreenOverlay"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true -- wichtig, damit es auch über Topbar & Chat geht!
gui.Parent = playerGui

local overlayFrame = Instance.new("Frame")
overlayFrame.Size = UDim2.new(1, 0, 1, 0)
overlayFrame.Position = UDim2.new(0, 0, 0, 0)
overlayFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
overlayFrame.BackgroundTransparency = 0
overlayFrame.BorderSizePixel = 0
overlayFrame.Parent = gui

-- Close-Button oben rechts
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -50, 0, 10)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.Text = "✖"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 20
closeButton.Parent = overlayFrame

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = closeButton

closeButton.MouseButton1Click:Connect(function()
	overlayFrame.Visible = false
end)

-- Der Text in der Mitte
local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(1, -20, 1, -20)
infoLabel.Position = UDim2.new(0, 10, 0, 10)
infoLabel.BackgroundTransparency = 1
infoLabel.TextColor3 = Color3.new(1, 1, 1)
infoLabel.TextWrapped = true
infoLabel.TextXAlignment = Enum.TextXAlignment.Center
infoLabel.TextYAlignment = Enum.TextYAlignment.Center
infoLabel.Font = Enum.Font.Gotham
infoLabel.TextSize = 26 -- anpassbar
infoLabel.Parent = overlayFrame

local function getTextSafe(path)
	local success, value = pcall(function()
		return path.Text
	end)
	return success and value or "?"
end

-- Werte-Loop
while true do
	local rewards = playerGui:FindFirstChild("GymMain") and playerGui.GymMain:FindFirstChild("MuscleRaceRewards")

	local huge = rewards and rewards:FindFirstChild("Huge")
	local gift = rewards and rewards:FindFirstChild("Gift")
	local titanic = rewards and rewards:FindFirstChild("Titanic")

	local hugeText = getTextSafe((huge and huge:FindFirstChild("Progress")) or {})
	local giftText = getTextSafe((gift and gift:FindFirstChild("Progress")) or {})
	local titanicText = getTextSafe((titanic and titanic:FindFirstChild("Progress")) or {})

	infoLabel.Text =
		" Gift: " .. giftText ..
		"  |   Huge: " .. hugeText ..
		"\n   Titanic: " .. titanicText ..
		"\n\n Huge Gym Shark: " .. tostring(getgenv().HugeGymSharkCount) ..
		"\n   Titanic Gym Piggy: " .. tostring(getgenv().TitanicGymPiggyCount)

	wait(1)
end
