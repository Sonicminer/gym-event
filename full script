getgenv().AutoArea = falseMore actions
getgenv().InfiniteGym = true
getgenv().AutoUpgrade = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InstancingCmds = require(ReplicatedStorage.Library.Client.InstancingCmds)

local function Enter(Name)
    setthreadidentity(2)
    pcall(function()
        InstancingCmds.Enter(Name)
    end)
    setthreadidentity(7)
end

Enter("GymEvent")

local rebCooldown = 2
local areaCooldown = 5
local gymCooldown = 1
local upgCooldown = 1



local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")

local InfTrain = Network:WaitForChild("InfiniteGym_Train")
local Train = Network:WaitForChild("Gym_Train")

task.spawn(function()
    while true do
        pcall(function()
            InfTrain:InvokeServer("Squat")
        end)
        task.wait()
    end
end)

task.spawn(function()
    while true do
        pcall(function()
            Train:InvokeServer("Squat")
        end)
        task.wait()
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoUpgrade == true then
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("BetterGymEgg")
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("MoreCriticalChance")
            game:GetService("ReplicatedStorage").Network["EventUpgrades: Purchase"]:InvokeServer("MoreEndurance")
        end
        wait(upgCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().InfiniteGym == true then
            game:GetService("ReplicatedStorage").Network.InfiniteGym_Start:InvokeServer()
        end
        wait(gymCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoArea == true then
            game:GetService("ReplicatedStorage").Network.Gym_Rebirth:InvokeServer()
        end
        wait(rebCooldown)
    end
end)

task.spawn(function()
    while true do
        if getgenv().AutoArea == true then
            for i = 2, 5 do
                game:GetService("ReplicatedStorage").Network.InstanceZones_RequestPurchase:InvokeServer("GymEvent", i)
                wait(0.5)
            end
        end
        wait(areaCooldown)
    end
end)

task.spawn(function()
	while true do
		local inv = nil
		-- Inventar suchen
		for i, v in pairs(getgc(true)) do
			if type(v) == "table" and rawget(v, "Inventory") and type(v.Inventory) == "table" then
				inv = v.Inventory
				break
			end
		end

		local gifts = 0
		local huges = 0
		local titanics = 0

		if inv then
			-- Gym Gifts zählen
			if inv.Lootbox then
				for uid, itemData in pairs(inv.Lootbox) do
					if typeof(itemData) == "table" and itemData.id == "Gym Gift" then
						local menge = itemData._am or 1
						gifts += menge
					end
				end
			end

			-- Huges & Titanics zählen
			if inv.Pet then
				for uid, petData in pairs(inv.Pet) do
					if typeof(petData) == "table" and petData.id == "Huge Gym Shark" then
						huges += 1
					elseif typeof(petData) == "table" and petData.id == "Titanic Gym Piggy" then
						titanics += 1
					end
				end
			end
		end

		getgenv().GiftGymCount = gifts
		getgenv().HugeGymSharkCount = huges
       		getgenv().TitanicGymPiggyCount = titanics

		wait(5)
	end
end)

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

@@ -164,6 +210,9 @@
		" Gift: " .. giftText ..
		"  |   Huge: " .. hugeText ..
		"\n   Titanic: " .. titanicText ..
		"\n\n Gym Gift: " .. tostring(getgenv().GiftGymCount) ..
		"\n Huge Gym Shark: " .. tostring(getgenv().HugeGymSharkCount) ..
		"\n  Titanic Gym Piggy: " .. tostring(getgenv().TitanicGymPiggyCount)

	wait(1)
end
